/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.table.DefaultTableModel;
import model.CarFleet;
import model.Cars;

/**
 *
 * @author balumullamuri
 */
public class SearchJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SearchPanel
     */
    CarFleet carfleet;
    public SearchJPanel(CarFleet carfleet) {
        initComponents();
        this.carfleet = carfleet;
        populateTable();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        carsAvailbtn = new javax.swing.JButton();
        carsNAvailbtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();

        carsAvailbtn.setText("Cars Available");
        carsAvailbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carsAvailbtnActionPerformed(evt);
            }
        });

        carsNAvailbtn.setText("Cars Not Available");

        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Manufacturer", "ModelNo", "SerialNo", "Availability", "Seats", "Year", "Distance", "ExpCert", "Location"
            }
        ));
        table1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(carsNAvailbtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(carsAvailbtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 788, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(carsAvailbtn)
                .addGap(18, 18, 18)
                .addComponent(carsNAvailbtn)
                .addGap(0, 416, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void carsAvailbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carsAvailbtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) table1.getModel();
              model.setRowCount(0);




                ArrayList<Double> dis = new ArrayList<>();
                ArrayList<Cars> temp = new ArrayList<Cars>();
                for(Cars c: this.carfleet.getCarfleet())
                {
                //temp = c.getDistance().sort();
                dis.add(c.getDistance());
                }
                Collections.sort(dis);
                dis.get(0);
                //System.out.println(dis.get(0));
                for(Cars c: this.carfleet.getCarfleet()){
                if(c.getDistance() == (dis.get(0)) && c.getAvailability().equalsIgnoreCase("Yes")){
                temp.add(c);
                }
                }
                Object rowData[] = new Object[9];
                for(int i = 0; i < 1; i++)
                {
                     rowData[0] = temp.get(i).getManufacturer();
                     rowData[1] = temp.get(i).getModelnum();
                     rowData[2] = temp.get(i).getSerialnum();
                     rowData[3] = temp.get(i).getAvailability();
                     rowData[4] = temp.get(i).getSeats();
                     rowData[5] = temp.get(i).getYear();
                     rowData[6] = temp.get(i).getDistance();
                     rowData[7] = temp.get(i).getCert();
                     rowData[8] = temp.get(i).getLocation();
                model.addRow(rowData);
                }
   
        
        
        
        
        
    
    }//GEN-LAST:event_carsAvailbtnActionPerformed

    private void table1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table1MouseClicked
        // TODO add your handling code here:
        /*int selectedRow = table.getSelectedRow();
        DefaultTableModel model =  (DefaultTableModel)  table.getModel();
        mftxt.setText(model.getValueAt(selectedRow , 0).toString());
        model_txt.setText(model.getValueAt(selectedRow , 1).toString());
        serialtxt.setText(model.getValueAt(selectedRow , 2).toString());
        seatstxt.setText(model.getValueAt(selectedRow , 4).toString());
        yeartxt.setText(model.getValueAt(selectedRow , 5).toString());
        distancetxt.setText(model.getValueAt(selectedRow , 6).toString());
        emctxt.setText(model.getValueAt(selectedRow , 7).toString());
        locationtxt.setText(model.getValueAt(selectedRow , 8).toString());*/

    }//GEN-LAST:event_table1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton carsAvailbtn;
    private javax.swing.JButton carsNAvailbtn;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable table1;
    // End of variables declaration//GEN-END:variables

 private void populateTable() {
       DefaultTableModel model = (DefaultTableModel)  table1.getModel();
       model.setRowCount(0);
       
       for(Cars cf: carfleet.getCarfleet()){ //for each value in carfleet arraylist
           Object[] row = new Object[9];     //array with 9 values
           row[0] = cf.getManufacturer();
           row[1] = cf.getModelnum();
           row[2] = cf.getSerialnum();
           row[3] = cf.getAvailability();
           row[4] = cf.getSeats();
           row[5] = cf.getYear();
           row[6] = cf.getDistance();
           row[7] = cf.getCert();
           row[8] = cf.getLocation();
           
           model.addRow(row);
       
       }
    }
}